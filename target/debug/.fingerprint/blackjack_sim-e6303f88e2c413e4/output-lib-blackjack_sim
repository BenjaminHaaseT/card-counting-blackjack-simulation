{"message":"unused import: `crate::sim::game::table::TableState`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"blackjack_sim/src/sim/game/player.rs","byte_start":54,"byte_end":89,"line_start":2,"line_end":2,"column_start":5,"column_end":40,"is_primary":true,"text":[{"text":"use crate::sim::game::table::TableState;","highlight_start":5,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"blackjack_sim/src/sim/game/player.rs","byte_start":50,"byte_end":90,"line_start":2,"line_end":2,"column_start":1,"column_end":41,"is_primary":true,"text":[{"text":"use crate::sim::game::table::TableState;","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::sim::game::table::TableState`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mblackjack_sim/src/sim/game/player.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::sim::game::table::TableState;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused imports: `BlackjackTable`, `Card`, `Deck`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"blackjack_sim/src/lib.rs","byte_start":34,"byte_end":48,"line_start":3,"line_end":3,"column_start":21,"column_end":35,"is_primary":true,"text":[{"text":"use blackjack_lib::{BlackjackTable, Card, Deck};","highlight_start":21,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"blackjack_sim/src/lib.rs","byte_start":50,"byte_end":54,"line_start":3,"line_end":3,"column_start":37,"column_end":41,"is_primary":true,"text":[{"text":"use blackjack_lib::{BlackjackTable, Card, Deck};","highlight_start":37,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"blackjack_sim/src/lib.rs","byte_start":56,"byte_end":60,"line_start":3,"line_end":3,"column_start":43,"column_end":47,"is_primary":true,"text":[{"text":"use blackjack_lib::{BlackjackTable, Card, Deck};","highlight_start":43,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"blackjack_sim/src/lib.rs","byte_start":14,"byte_end":62,"line_start":3,"line_end":3,"column_start":1,"column_end":49,"is_primary":true,"text":[{"text":"use blackjack_lib::{BlackjackTable, Card, Deck};","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BlackjackTable`, `Card`, `Deck`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mblackjack_sim/src/lib.rs:3:21\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse blackjack_lib::{BlackjackTable, Card, Deck};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"not all trait items implemented, missing: `place_bet`, `play_option`, `stand`, `hit`, `double_down`, `split`, `get_dealers_optimal_final_hand`, `finish_hand`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"blackjack_sim/src/sim/game/table.rs","byte_start":873,"byte_end":949,"line_start":39,"line_end":39,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"impl<S: CountingStrategy> BlackjackTable<PlayerSim<S>> for BlackjackTableSim {","highlight_start":1,"highlight_end":77}],"label":"missing `place_bet`, `play_option`, `stand`, `hit`, `double_down`, `split`, `get_dealers_optimal_final_hand`, `finish_hand` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `fn place_bet(&self, _: &mut P, _: f32) -> Result<(), BlackjackGameError> { todo!() }`","code":null,"level":"help","spans":[{"file_name":"blackjack_sim/src/sim/game/table.rs","byte_start":2460,"byte_end":2460,"line_start":77,"line_end":77,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn place_bet(&self, _: &mut P, _: f32) -> Result<(), BlackjackGameError> { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn play_option(&mut self, _: &mut P, _: &HashMap<i32, String>, _: i32) -> Result<(), BlackjackGameError> { todo!() }`","code":null,"level":"help","spans":[{"file_name":"blackjack_sim/src/sim/game/table.rs","byte_start":2460,"byte_end":2460,"line_start":77,"line_end":77,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn play_option(&mut self, _: &mut P, _: &HashMap<i32, String>, _: i32) -> Result<(), BlackjackGameError> { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn stand(&self, _: &mut P) { todo!() }`","code":null,"level":"help","spans":[{"file_name":"blackjack_sim/src/sim/game/table.rs","byte_start":2460,"byte_end":2460,"line_start":77,"line_end":77,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn stand(&self, _: &mut P) { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn hit(&mut self, _: &mut P) { todo!() }`","code":null,"level":"help","spans":[{"file_name":"blackjack_sim/src/sim/game/table.rs","byte_start":2460,"byte_end":2460,"line_start":77,"line_end":77,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn hit(&mut self, _: &mut P) { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn double_down(&mut self, _: &mut P) { todo!() }`","code":null,"level":"help","spans":[{"file_name":"blackjack_sim/src/sim/game/table.rs","byte_start":2460,"byte_end":2460,"line_start":77,"line_end":77,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn double_down(&mut self, _: &mut P) { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn split(&mut self, _: &mut P) { todo!() }`","code":null,"level":"help","spans":[{"file_name":"blackjack_sim/src/sim/game/table.rs","byte_start":2460,"byte_end":2460,"line_start":77,"line_end":77,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn split(&mut self, _: &mut P) { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn get_dealers_optimal_final_hand(&mut self) -> u8 { todo!() }`","code":null,"level":"help","spans":[{"file_name":"blackjack_sim/src/sim/game/table.rs","byte_start":2460,"byte_end":2460,"line_start":77,"line_end":77,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn get_dealers_optimal_final_hand(&mut self) -> u8 { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn finish_hand(&mut self, _: &mut P) { todo!() }`","code":null,"level":"help","spans":[{"file_name":"blackjack_sim/src/sim/game/table.rs","byte_start":2460,"byte_end":2460,"line_start":77,"line_end":77,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn finish_hand(&mut self, _: &mut P) { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `place_bet`, `play_option`, `stand`, `hit`, `double_down`, `split`, `get_dealers_optimal_final_hand`, `finish_hand`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mblackjack_sim/src/sim/game/table.rs:39:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl<S: CountingStrategy> BlackjackTable<PlayerSim<S>> for BlackjackTableSim {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `place_bet`, `play_option`, `stand`, `hit`, `double_down`, `split`, `get_dealers_optimal_final_hand`, `finish_hand` in implementation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `fn place_bet(&self, _: &mut P, _: f32) -> Result<(), BlackjackGameError> { todo!() }`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `fn play_option(&mut self, _: &mut P, _: &HashMap<i32, String>, _: i32) -> Result<(), BlackjackGameError> { todo!() }`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `fn stand(&self, _: &mut P) { todo!() }`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `fn hit(&mut self, _: &mut P) { todo!() }`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `fn double_down(&mut self, _: &mut P) { todo!() }`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `fn split(&mut self, _: &mut P) { todo!() }`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `fn get_dealers_optimal_final_hand(&mut self) -> u8 { todo!() }`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `fn finish_hand(&mut self, _: &mut P) { todo!() }`\u001b[0m\n\n"}
{"message":"no method named `receive_card` found for struct `DealersHandSim` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"blackjack_sim/src/sim/game/table.rs","byte_start":311,"byte_end":332,"line_start":14,"line_end":14,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"struct DealersHandSim {","highlight_start":1,"highlight_end":22}],"label":"method `receive_card` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"blackjack_sim/src/sim/game/table.rs","byte_start":1924,"byte_end":1936,"line_start":64,"line_end":64,"column_start":27,"column_end":39,"is_primary":true,"text":[{"text":"        self.dealers_hand.receive_card(Rc::clone(&cur_card));","highlight_start":27,"highlight_end":39}],"label":"method not found in `DealersHandSim`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `receive_card` found for struct `DealersHandSim` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mblackjack_sim/src/sim/game/table.rs:64:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct DealersHandSim {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod `receive_card` not found for this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        self.dealers_hand.receive_card(Rc::clone(&cur_card));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `DealersHandSim`\u001b[0m\n\n"}
{"message":"no method named `receive_card` found for struct `DealersHandSim` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"blackjack_sim/src/sim/game/table.rs","byte_start":311,"byte_end":332,"line_start":14,"line_end":14,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"struct DealersHandSim {","highlight_start":1,"highlight_end":22}],"label":"method `receive_card` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"blackjack_sim/src/sim/game/table.rs","byte_start":2330,"byte_end":2342,"line_start":73,"line_end":73,"column_start":27,"column_end":39,"is_primary":true,"text":[{"text":"        self.dealers_hand.receive_card(cur_card)","highlight_start":27,"highlight_end":39}],"label":"method not found in `DealersHandSim`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `receive_card` found for struct `DealersHandSim` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mblackjack_sim/src/sim/game/table.rs:73:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct DealersHandSim {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod `receive_card` not found for this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        self.dealers_hand.receive_card(cur_card)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `DealersHandSim`\u001b[0m\n\n"}
{"message":"aborting due to 3 previous errors; 2 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 3 previous errors; 2 warnings emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0046, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0046, E0599.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0046`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0046`.\u001b[0m\n"}
